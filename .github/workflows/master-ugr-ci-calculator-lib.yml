name: Build library, run tests, and more

on:
  workflow_dispatch:
  push:
    branches:
      - lib
  pull_request:
    branches:
      - dev

env:
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: master-ugr.calculator.lib/calculator.lib
  TEST_PATH: master-ugr.calculator.lib/tests/calculator.lib.test
  REPORTS_DIR: security-reports
  CALCULATOR_FRONTEND_URL_PROD: https://alex-ohdz-calculator-frontend-fggne8b2epegewfe.westeurope-01.azurewebsites.net/
  CALCULATOR_BACKEND_URL_UAT: https://alex-ohdz-calculator-backend-uat-ggdshbg8ejcpbthg.westeurope-01.azurewebsites.net/
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        # Checkout the repository      

      - name: Create reports directory
        run: mkdir -p ./security-reports

      - name: Run Snyk Test
        run: snyk test --sarif-file-output=./security-reports/snyk.sarif --all-projects --project-base-path=master-ugr.calculator.lib
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: List files in workspace
        run: ls -la

      - name: List files in security reports directory
        run: ls -la ./security-reports

      - name: Verify SARIF file exists
        run: |
          if [ ! -f ./security-reports/snyk.sarif ]; then
            echo "Error: SARIF file not found!"
            exit 1
          fi

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./security-reports/snyk.sarif

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      # Checkout the repository      
    - name: Listing current dir
      run: ls -la
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      # Setup the .NET SDK version specified in the environment variables

    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
      # Restore the dependencies for the .NET project

    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
      # Build the .NET project in Release configuration without restoring dependencies
  tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        # Checkout the repository (each job runs in a fresh VM)
  
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
        # Setup the .NET SDK version specified in the environment variables
      - name: run tests
        run: dotnet test ${{ env.TEST_PATH }}
